<?phpclass User extends CI_Controller {    public function __construct() {        parent::__construct();        $this->load->library(array('session', 'ion_auth', 'form_validation', 'email'));        $this->load->database();        $this->load->model('blog_model', 'user_model', 'member_model');        $this->load->helper(array('form', 'url', 'html', 'string', 'date'));    }    public function login() {        $data['datalogin'] = $this->getDataLogin();        $data['setting'] = $this->web_setting("Login");        $this->form_validation->set_rules('identity', str_replace(':', '', $this->lang->line('login_identity_label')), 'required');        $this->form_validation->set_rules('password', str_replace(':', '', $this->lang->line('login_password_label')), 'required');        if ($this->form_validation->run() == true) {            $remember = (bool) $this->input->post('remember');            if ($this->ion_auth->login($this->input->post('identity'), $this->input->post('password'), $remember)) {                if ($this->ion_auth->is_admin()) {                    redirect('admincms', 'refresh');                } else {                    $user = $this->ion_auth->user()->row();                    redirect('profile/' . $user->id_reg . '', 'refresh');                }            } else {                $this->session->set_flashdata('message', $this->ion_auth->errors());            }        } else {            $this->session->set_flashdata('message', $this->ion_auth->errors());        }        $data['menu'] = $this->blog_model->get_menu()->result_array();        $data['message'] = (validation_errors()) ? validation_errors() : $this->session->flashdata('message');        $data['total_scifi'] = $this->blog_model->get_cat_scifi();        $data['total_tech'] = $this->blog_model->get_cat_tech();        $data['total_sport'] = $this->blog_model->get_cat_sport();        $data['total_automotive'] = $this->blog_model->get_cat_automotive();        $data['total_video'] = $this->blog_model->get_cat_video();        //LOAD DATA VIEW        $html['head'] = $this->load->view('page/head', $data, TRUE);        $html['navbar'] = $this->load->view('page/navbar', $data, TRUE);                $html['footer'] = $this->load->view('page/footer', $data, TRUE);                //LOAD MASTER VIEW        $this->load->view('page/login', $html);            }    public function register() {        $data['datalogin'] = $this->getDataLogin();        $data['setting'] = $this->web_setting("Register");        $this->form_validation->set_rules('email', 'Email', 'trim|valid_email|required|is_unique[users.email]');        $this->form_validation->set_rules('password', 'Password', 'trim|min_length[8]|max_length[20]|required');        $this->form_validation->set_rules('confirm_password', 'Confirm password', 'trim|matches[password]|required');        if ($this->form_validation->run() === FALSE) {            $this->session->mark_as_flash('message', '<div class="alert alert-warning">' . $this->ion_auth->errors() . '</div>');        } else {            $username = $this->input->post('username');            $email = $this->input->post('email');            $password = $this->input->post('password');            $id_reg = 'GEEQ-' . random_string('numeric', 5) . date('y');            $datalain = array(                'id_reg' => $id_reg,                'datereg' => date("Y-m-d H:i:s")            );            $path = APPPATH . '../assets/member/' . $id_reg . '';            if (!is_dir($path)) {                mkdir($path, 0755, TRUE);            }            $paths = APPPATH . '../assets/member/' . $id_reg . '/thumb/';            if (!is_dir($paths)) {                mkdir($paths, 0755, TRUE);            }            if ($this->ion_auth->register($username, $password, $email, $datalain)) {                redirect('thank-you', 'refresh');            } else {                $data['message'] = (validation_errors() ? validation_errors() : ($this->ion_auth->errors() ? $this->ion_auth->errors() : $this->session->flashdata('message')));                redirect('login', 'refresh');            }        }        $data['menu'] = $this->blog_model->get_menu()->result_array();        $data['message'] = (validation_errors() ? validation_errors() : ($this->ion_auth->errors() ? $this->ion_auth->errors() : $this->session->flashdata('message')));        $data['total_scifi'] = $this->blog_model->get_cat_scifi();        $data['total_tech'] = $this->blog_model->get_cat_tech();        $data['total_sport'] = $this->blog_model->get_cat_sport();        $data['total_automotive'] = $this->blog_model->get_cat_automotive();        $data['total_video'] = $this->blog_model->get_cat_video();        //LOAD DATA VIEW        $html['head'] = $this->load->view('page/head', $data, TRUE);        $html['navbar'] = $this->load->view('page/navbar', $data, TRUE);                $html['footer'] = $this->load->view('page/footer', $data, TRUE);                //LOAD MASTER VIEW        $this->load->view('page/register',$html);            }    public function logout() {        $logout = $this->ion_auth->logout();        $this->session->set_flashdata('message', $this->ion_auth->messages());        redirect('', 'refresh');    }    public function forgotpassword() {               $data['setting'] = $this->web_setting("Forgot Password");                $this->data['menu'] = $this->blog_model->get_menu()->result_array();        if ($this->config->item('identity', 'ion_auth') != 'email') {            $this->form_validation->set_rules('identity', $this->lang->line('forgot_password_identity_label'), 'required');        } else {            $this->form_validation->set_rules('identity', $this->lang->line('forgot_password_validation_email_label'), 'required|valid_email');        }        if ($this->form_validation->run() == false) {            $this->data['type'] = $this->config->item('identity', 'ion_auth');            $this->data['site_title'] = "Forgot Password";            $this->data['identity'] = array(                'name' => 'identity',                'id' => 'identity'            );            if ($this->config->item('identity', 'ion_auth') != 'email') {                $this->data['identity_label'] = $this->lang->line('forgot_password_identity_label');            } else {                $this->data['identity_label'] = $this->lang->line('forgot_password_email_identity_label');            }            $this->data['message'] = (validation_errors()) ? validation_errors() : $this->session->flashdata('message');            $this->load->view('page/head', $this->data);            $this->load->view('page/navbar');            $this->load->view('page/forgotpassword', $this->data);            $this->load->view('page/footer');        } else {            $identity_column = $this->config->item('identity', 'ion_auth');            $identity = $this->ion_auth->where($identity_column, $this->input->post('identity'))->users()->row();            if (empty($identity)) {                if ($this->config->item('identity', 'ion_auth') != 'email') {                    $this->ion_auth->set_error('message', 'forgot_password_identity_not_found');                } else {                    $this->ion_auth->set_error('forgot_password_email_not_found');                }                $this->session->set_flashdata('message', $this->ion_auth->errors());                redirect("user/forgotpassword", 'refresh');            }            $forgotten = $this->ion_auth->forgotten_password($identity->{$this->config->item('identity', 'ion_auth')});            if ($forgotten) {                $this->session->set_flashdata('message', $this->ion_auth->messages());                redirect("user/forgotpassword", 'refresh'); //we should display a confirmation page here instead of the login page            } else {                $this->session->set_flashdata('message', '<div class="alert alert-warning">' . $this->ion_auth->errors() . '</div>');                redirect("user/forgotpassword", 'refresh');            }        }    }    public function contactpost() {        $this->form_validation->set_rules('name', 'Name', 'required');        if ($this->form_validation->run() == FALSE) {            $this->session->set_flashdata('msg', '<div class="alert alert-danger text-center">Oops! Error.  Please try again later!!!</div>');            header('location:' . base_url('contact'));        } else {            $data = array(                'date' => date('Y-m-d H:i:s'),                'name' => $this->input->post('name'),                'email' => $this->input->post('email'),                'phone' => $this->input->post('phone'),                'subject' => $this->input->post('subject'),                'message' => $this->input->post('message')            );            $subject = $this->input->post('subject');            $message = $this->input->post('message');            $phone = $this->input->post('phone');            $email = $this->input->post('email');            $name = $this->input->post('name');            $body = 'Hi Admin GEEQ, seseorang mengirimkan pesan dari kontak form web GEEQ sbb : <br><br>                     Name : ' . $name . '<br>                     Email : ' . $email . '<br>                    Phone : ' . $phone . '<br>                                    Pesan : ' . $message . '<br><br>                    Thank you<br><br>';            $this->email->clear();            $this->email->from('noreply@geeq.id');            $this->email->to('dinar@dinartdesign.com'); 			$this->email->to('idrisn@cpxi.com');             $this->email->subject($subject);            $this->email->message($body);            $this->email->send();            echo $this->email->print_debugger();            if ($this->blog_model->insert_data('contact', $data)) {                $this->session->set_flashdata('msg', '<div class="alert alert-success text-center">Success Submit!</div>');                header('location:' . base_url('contact'));            } else {                $this->session->set_flashdata('msg', '<div class="alert alert-danger text-center">Oops! Error.  Please try again later!!!</div>');                header('location:' . base_url('contact'));            }        }    }    public function subscribe() {        $this->form_validation->set_rules('email', 'Email', 'trim|valid_email|required|is_unique[subscribe.email]');        if ($this->form_validation->run() == FALSE) {            header('location:' . base_url());        } else {            $data = array(                'date' => date('Y-m-d H:i:s'),                'name' => $this->input->post('name'),                'email' => $this->input->post('email')            );            if ($this->blog_model->insert_data('subscribe', $data)) {                header('location:' . base_url());            } else {                header('location:' . base_url());            }        }    }    function web_setting($cat_name =""){        $web_setting = $this->blog_model->get_setting()->result_array();        if($cat_name==''){            $data['site_title'] = $web_setting[0]['title'];        }else{            $data['site_title'] = $web_setting[0]['title'].' - '.$cat_name;        }        $data['keyword'] = $web_setting[0]['keyword'];        $data['description'] = $web_setting[0]['description'];        $data['image'] ="";        $data['video'] = "";                            return $data;    }    function getDatalogin(){        if ($this->ion_auth->logged_in()) {            $user = $this->ion_auth->user()->row();            $data['id'] = $user->id;            $data['id_reg'] = $user->id_reg;            $data['username'] = $user->first_name . ' ' . $user->last_name;            $data['email'] = $user->email;            $data['profil_picture'] = $user->picture;            $data['cover'] = $user->cover;            $data['group_id'] = $this->ion_auth->get_users_groups()->row()->id;        } else {            $data['id_reg'] = '';        }        return $data;            }    }